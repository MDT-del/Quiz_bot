services:
  db:
    image: mysql:8.0
    container_name: quiz-db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      # والیوم اول: برای ذخیره دائمی داده‌های دیتابیس پس از ساخته شدن
      - db_data:/var/lib/mysql
      # والیوم دوم: برای خواندن و اجرای فایل quiz.sql در هنگام ساخت اولیه
      # این باید به فایل quiz.sql اشاره کند، نه کل پوشه data اگر فقط یک فایل دارید
      # اگر چندین .sql, .sh, .sql.gz دارید، پوشه صحیح است.
      # برای یک فایل واحد، بهتر است مسیر دقیق فایل را مپ کنید:
      - ./data/quiz.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build: .
    container_name: quiz-app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    # چون پروژه شما بخش وب (admin_panel) دارد، پورت‌ها را باز می‌کنیم
    ports:
      - "8080:8080" # پورت پیش‌فرض Flask که در config.py هم استفاده شده
    networks:
      - quiz_network
    # environment: # اگر از env_file استفاده می‌کنید، این بخش ممکن است لازم نباشد مگر برای override یا مقادیر غیرحساس
      # - PYTHONUNBUFFERED=1 # این معمولا در Dockerfile تنظیم می‌شود

volumes:
  db_data:

networks:
  quiz_network:
