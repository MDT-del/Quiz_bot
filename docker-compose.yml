# نسخه نهایی، پایدار و پیشنهادی
services:
  db:
    image: mysql:8.0
    container_name: quiz-db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      # فقط این والیوم برای ذخیره دائمی داده‌های دیتابیس استفاده می‌شود
      - db_data:/var/lib/mysql
      # دیگر فایل init.sql را اینجا مپ نمی‌کنیم، ایجاد جداول توسط کد پایتون انجام می‌شود
      # - ./data/quiz.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # زمان کافی برای راه‌اندازی MySQL

  web:
    build: .
    container_name: quiz-web
    restart: always
    # command: ["gunicorn", "--bind", "0.0.0.0:8080", "--workers", "4", "--timeout", "120", "admin_panel:app"]
    # از gunicorn.conf.py استفاده می‌کنیم که wsgi:application را هدف قرار می‌دهد
    command: ["gunicorn", "-c", "./gunicorn.conf.py", "wsgi:application"]
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      # فقط پوشه مدیا را برای پایداری فایل‌های آپلود شده به اشتراک می‌گذاریم
      # این volume باید توسط سرویس bot هم استفاده شود
      - media_data:/app/static/media
      # برای توسعه، می‌توانید کد را هم مپ کنید، اما برای پروداکشن بهتر است در ایمیج باشد
      # - .:/app
    env_file:
      - .env
    networks:
      - quiz_network

  bot:
    build: . # از همان Dockerfile برای ساخت ایمیج استفاده می‌کند
    container_name: quiz-bot-instance
    restart: always
    command: ["python", "run_bot.py"] # اسکریپت جدید برای اجرای ربات
    depends_on:
      db:
        condition: service_healthy # ربات هم باید منتظر آماده شدن دیتابیس بماند
    volumes:
       # دسترسی به پوشه مدیا در صورت نیاز ربات به خواندن فایل (برای ارسال به کاربر)
      - media_data:/app/static/media # استفاده از همان volume مشترک
      # - .:/app # اگر ربات نیاز به خواندن مستقیم کدها از هاست دارد (برای توسعه)
    env_file:
      - .env
    networks:
      - quiz_network

volumes:
  db_data:
  media_data: # والیوم مشترک برای فایل‌های رسانه‌ای

networks:
  quiz_network:
    driver: bridge
